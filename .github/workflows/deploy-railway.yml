name: Deploy Quest-CMS to Railway

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run basic tests
        run: |
          python -c "
          # Basic import test
          try:
              from nicegui import ui
              print('‚úÖ NiceGUI import successful')
          except Exception as e:
              print(f'‚ùå NiceGUI import failed: {e}')
              exit(1)
          
          # Check requirements
          import pkg_resources
          requirements = open('requirements.txt').read().splitlines()
          for req in requirements:
              if req.strip() and not req.startswith('#'):
                  try:
                      pkg_resources.require(req)
                      print(f'‚úÖ {req} satisfied')
                  except Exception as e:
                      print(f'‚ùå {req} failed: {e}')
          print('‚úÖ All dependency checks passed')
          "
          
      - name: Install Railway CLI
        run: |
          curl -fsSL https://railway.app/install.sh | sh
          
      - name: Deploy to Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          railway login --token $RAILWAY_TOKEN
          railway up --detach
          
      - name: Set Environment Variables
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          NEON_CONNECTION_STRING: ${{ secrets.NEON_CONNECTION_STRING }}
          CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
          REPLICATE_API_TOKEN: ${{ secrets.REPLICATE_API_TOKEN }}
        run: |
          echo "üîß Setting environment variables..."
          railway variables set NEON_CONNECTION_STRING="$NEON_CONNECTION_STRING" || echo "‚ö†Ô∏è Variable set failed (may already exist)"
          railway variables set CLAUDE_API_KEY="$CLAUDE_API_KEY" || echo "‚ö†Ô∏è Variable set failed (may already exist)"
          railway variables set REPLICATE_API_TOKEN="$REPLICATE_API_TOKEN" || echo "‚ö†Ô∏è Variable set failed (may already exist)"
          railway variables set PORT="8080" || echo "‚ö†Ô∏è Variable set failed (may already exist)"
          
      - name: Wait for deployment
        run: |
          echo "‚è≥ Waiting for deployment to complete..."
          sleep 30
          
      - name: Get deployment URL
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          DEPLOY_URL=$(railway status --json | jq -r '.deployments[0].url // "No URL available"')
          echo "üöÄ Deployment URL: $DEPLOY_URL"
          echo "deployment-url=$DEPLOY_URL" >> $GITHUB_OUTPUT
          
      - name: Health check
        run: |
          DEPLOY_URL=$(railway status --json | jq -r '.deployments[0].url // ""')
          if [ -n "$DEPLOY_URL" ]; then
            echo "üîç Testing health endpoint: $DEPLOY_URL/health"
            curl -f "$DEPLOY_URL/health" || echo "‚ö†Ô∏è Health check failed, but deployment may still be starting"
          else
            echo "‚ö†Ô∏è No deployment URL available for health check"
          fi